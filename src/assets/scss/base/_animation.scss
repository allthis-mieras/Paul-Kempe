// | -------------------------------------------------------------
// | Animation
// | -------------------------------------------------------------

.splitting {
    .char {
        display: inline-block;
        position: relative;

        &:before,
        &:after {
            display: inline-block;

        }

    }



}



/* Recommended styles for Splitting */
.splitting .word,
.splitting .char {
    display: inline-block;
}

/* Psuedo-element chars */
.splitting .char {
    position: relative;
}

/**
 * Populate the psuedo elements with the character to allow for expanded effects
 * Set to `display: none` by default; just add `display: block` when you want
 * to use the psuedo elements
 */
.splitting .char::before,
.splitting .char::after {
    content: attr(data-char);
    position: absolute;
    top: 0;
    left: 0;
    visibility: hidden;
    transition: inherit;
    user-select: none;
}

/* Expanded CSS Variables */

.splitting {
    /* The center word index */
    --word-center: calc((var(--word-total) - 1) / 2);

    /* The center character index */
    --char-center: calc((var(--char-total) - 1) / 2);

    /* The center character index */
    --line-center: calc((var(--line-total) - 1) / 2);
}

.splitting .word {
    /* Pecent (0-1) of the word's position */
    --word-percent: calc(var(--word-index) / var(--word-total));

    /* Pecent (0-1) of the line's position */
    --line-percent: calc(var(--line-index) / var(--line-total));
}

.splitting .char {
    /* Percent (0-1) of the char's position */
    --char-percent: calc(var(--char-index) / var(--char-total));

    /* Offset from center, positive & negative */
    --char-offset: calc(var(--char-index) - var(--char-center));

    /* Absolute distance from center, only positive */
    --distance: calc((var(--char-offset) * var(--char-offset)) / var(--char-center));

    /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
    --distance-sine: calc(var(--char-offset) / var(--char-center));

    /* Distance from center where 1 is far left/far right, 0 is center */
    --distance-percent: calc((var(--distance) / var(--char-center)));
}

/* ---------------------------------- */
/* ---- Custom Animation Classes ---- */
/* ---------------------------------- */

.variable-font {
    .char {

        --delayAmount: 200ms;
        --delayAmount: var(--customDelay);
        --delay: calc((var(--char-index) + 1) * 400ms);
        --durationAmount: 1000ms;
        --durationAmount: var(--customduration);
        font-variation-settings: "wght" 124;
        position: relative;
    }

    &.in-view .char {
        animation: grow 1000ms both;
        animation-delay: calc(var(--delayAmount) * var(--char-index));
    }

    &.not-in-view .char {
        font-variation-settings: "wght" 224;
    }
}

@keyframes grow {
    0% {
        font-variation-settings: 'wght' 224;
        // translate: -0vw 2vw;

        // opacity: 0;

    }


    100% {
        font-variation-settings: 'wght' 470;
        translate: 0 0;
        // color: red;

    }
}