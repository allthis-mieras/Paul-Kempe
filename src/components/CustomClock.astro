---
const { showDate, timeZone = true } = Astro.props;
// console.log("timeZone",  Astro.props);
const getLocalTime = (showDate: boolean) => {
  const now = new Date();
  const options = { timeZone: timeZone || "Europe/Amsterdam", hour12: false };
  let localTime = now.toLocaleString("nl-NL", options).replace("T", " ");
  const milliseconds = now.getMilliseconds().toString().padStart(3, "0");
  if (!showDate) {
    localTime = localTime.split(" ")[1]; // Remove the date part
  }
  return `${localTime}:${milliseconds}`;
};
---

<div class="clock">
  <p>{timeZone === "Europe/Amsterdam" ? "CET" : "EST"}</p>
  <div class="clock__analog">
    <div class="arm hour"></div>
    <div class="arm minute"></div>
    <div class="arm second"></div>
  </div>
  <p class="clock__digital" id="local-time">{getLocalTime(showDate)}</p>
</div>

<style>
  :root {
    --hand: 0.25em;
    --hand-hours: calc(var(--hand) / 1.25);
    --hand-minutes: calc(var(--hand) / 1.5);
    --hand-seconds: calc(var(--hand) / 2.5);
  }

  .clock {
    display: flex;
    align-items: center;
    font-size: 0.675rem;
    gap: 0.5em;
  }

  p {
    font-size: 1em;
    margin: 0;
    padding: 0;
  }
  .clock__analog {
    text-align: center;
    position: relative;

    width: 2rem;
    height: 2rem;
    /* margin: -6rem 0 0 -6rem; */
    border-radius: 50%;
    /* border: 0.225em solid var(--font-color); */
    background-color: rgba(0, 0, 0, 0);
  }

  .arm {
    position: absolute;
    background-color: var(--font-color);

    -webkit-transition: -webkit-transform 0.5s ease;
    -moz-transition: -moz-transform 0.5s ease;
    -ms-transition: -ms-transform 0.5s ease;
    -o-transition: -o-transform 0.5s ease;
    transition: transform 0.5s ease;

    -webkit-transform-origin: 50% 100%;
    -moz-transform-origin: 50% 100%;
    -ms-transform-origin: 50% 100%;
    -o-transform-origin: 50% 100%;
    transform-origin: 50% 100%;
  }

  .hour {
    height: 30%;
    top: 20%;
    left: 50%;
    width: var(--hand-hours);
    margin-left: calc(var(--hand-hours) / -2);
    border-radius: 25%;
  }

  .minute {
    height: 40%;
    top: 10%;
    left: 50%;
    width: var(--hand-minutes);
    margin-left: calc(var(--hand-minutes) / -2);
    border-radius: 25%;
    opacity: 0.8;
  }

  .second {
    height: 45%;
    top: 5%;
    left: 50%;
    width: var(--hand-seconds);
    margin-left: calc(var(--hand-seconds) / -2);
    border-radius: 5%;
    opacity: 0.8;
  }
</style>

<script is:inline define:vars={{ timeZone }}>
  // Digital
  const showDate = false; // Set this to false to hide the date

  const updateLocalTime = () => {
    const getLocalTime = (showDate) => {
      const now = new Date();
      const options = {
        timeZone: timeZone || "Europe/Amsterdam",
        hour12: false,
      };
      let localTime = now.toLocaleString("nl-NL", options).replace("T", " ");
      const milliseconds = now.getMilliseconds().toString().padStart(3, "0");
      if (!showDate) {
        localTime = localTime.split(" ")[1]; // Remove the date part
      }
      return `${localTime}:${milliseconds}`;
    };

    const localTimeElement = document.getElementById("local-time");
    if (localTimeElement) {
      localTimeElement.textContent = getLocalTime(showDate);
    }
  };

  setInterval(updateLocalTime, 10); // Update Time

  // Analog
  const startTime = new Date();
  const startS = startTime.getSeconds();
  const startM = startTime.getMinutes() * 60 + startS;
  const startH = (startTime.getHours() % 12) * 3600 + startM;

  refreshClock();

  function refreshClock() {
    const now = new Date();
    const options = { timeZone: timeZone || "Europe/Amsterdam" };
    const localTime = new Date(now.toLocaleString("en-US", options));
    const diff = timeDifference(startTime, localTime);
    const degS = ((startS + diff) / 60) * 360;
    const degM = ((startM + diff) / 3600) * 360;
    const degH = ((startH + diff) / 43200) * 360;

    document.querySelector(".hour").style.transform = `rotate(${degH}deg)`;
    document.querySelector(".minute").style.transform = `rotate(${degM}deg)`;
    document.querySelector(".second").style.transform = `rotate(${degS}deg)`;

    setTimeout(refreshClock, 1000);
  }

  function timeDifference(date1, date2) {
    return Math.round(Math.abs(date2.getTime() - date1.getTime()) / 1000);
  }
</script>
