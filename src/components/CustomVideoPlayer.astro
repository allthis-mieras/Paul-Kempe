---
import { urlForImage } from "../sanity/lib/urlForImage";
const {
  class: className,
  videoUrlDesktop,
  videoUrlMobile,
  posterImage,
  aspectRatio,
  ...rest
} = Astro.props;
---

<video
  style={`--aspect-ratio: ${aspectRatio}`}
  class={className}
  autoplay
  playsinline
  loop
  muted
  poster={urlForImage(posterImage).url()}
  data-cursor="video"
  data-desktop-vid={videoUrlDesktop}
  data-mobile-vid={videoUrlMobile}
  {...rest}
>
  Your browser does not support the video tag.
</video>
<button id="audio-control" class="muted">Unmute</button>

<style lang="scss">
  .responsive-video {
    display: flex;
    flex-direction: column;
  }

  video {
    aspect-ratio: var(--aspect-ratio);
    width: 100%;
    height: auto;

    &[poster] {
      object-fit: cover;
      width: 100%;
      height: 100%;
    }
  }

  .desktop-video {
    display: none;
    aspect-ratio: 16 / 9;
  }

  .mobile-video {
    display: block;
    aspect-ratio: 9 / 16;
  }

  button {
    position: absolute;
    bottom: 0;
    left: 0;
  }

  @media (min-width: 768px) {
    .desktop-video {
      display: block;
    }
    .mobile-video {
      display: none;
    }

    button {
      display: none;
    }
  }
</style>
<script is:inline>
  //@ts-nocheck
  // Get all videos and the audio control button
  function initializeVideoPlayer() {
    const videos = document.querySelectorAll(".video");
    const audioControlButton = document.getElementById("audio-control");

    function toggleMute(video) {
      video.muted = !video.muted;
      audioControlButton.textContent = video.muted ? "Unmute" : "Mute";
      // console.log("video muted", video.muted);
    }

    // Add event listener to each video
    videos.forEach((video) => {
      video.addEventListener("click", function (e) {
        e.preventDefault();
        toggleMute(video);
      });
    });

    // Add event listener to the audio control button
    audioControlButton.addEventListener("click", function (e) {
      e.preventDefault();
      videos.forEach((video) => toggleMute(video));
    });

    // Add source to video tag
    function addSourceToVideo(element, src) {
      var source = document.createElement("source");
      source.src = src;
      source.type = "video/mp4";
      console.log(src);
      element.appendChild(source);
    }

    // Determine screen size and select mobile or desktop video
    function whichSizeVideo(element, src) {
      var windowWidth = window.innerWidth
        ? window.innerWidth
        : $(window).width();
      if (windowWidth > 1200) {
        addSourceToVideo(element, src.dataset.desktopVid);
      } else {
        addSourceToVideo(element, src.dataset.mobileVid);
      }
    }

    // Initialize only if page has videos
    function videoSize() {
      if (videos.length > 0) {
        videos.forEach(function (element) {
          whichSizeVideo(element, element);
        });
      }
    }

    videoSize();
  }

  document.addEventListener("astro:page-load", initializeVideoPlayer);
  document.addEventListener("astro:after-preparation", initializeVideoPlayer);
</script>
