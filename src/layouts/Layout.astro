---
import "../assets/scss/main.scss";
import "../assets/scss/global.scss";

import { getSiteSettings } from "../sanity/lib/sanity";
const siteSettings = await getSiteSettings();

// console.log("siteSettings", siteSettings);

import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import SiteMeta from "../components/siteMeta.astro";
import SiteSchema from "../components/siteSchema.astro";
import CustomCursor from "../components/CustomCursorGSAP.astro";
import CustomScrollObserver from "../components/CustomScrollObserver.astro";

import { VisualEditing } from "@sanity/astro/visual-editing";
const visualEditingEnabled =
  import.meta.env.PUBLIC_SANITY_VISUAL_EDITING_ENABLED == "true";
---

<html lang={siteSettings.language || "en"}>
  <head>
    <SiteMeta settings={siteSettings} />
  </head>
  <body>
    <Header
      title={siteSettings.title}
      logoVideo={siteSettings.logoVideo}
      logoVideoSafari={siteSettings.logoVideoSafari}
      logoFallback={siteSettings.logoFallback}
      social={siteSettings.socialAccounts[0]}
    />
    <main id="main-content" transition:animate="fade">
      <slot />
      <CustomScrollObserver />
    </main>
    <CustomCursor />

    <Footer title={siteSettings.title} timeZone={siteSettings.timezone} />
    <VisualEditing enabled={visualEditingEnabled} />

    <SiteSchema />
  </body>
</html>

<style></style>

<script>
  // Initialize Lenis
  import Lenis from "lenis";
  const lenis = new Lenis({
    duration: 1.2, // Adjust as needed
    easing: (t) => Math.min(1, 1.001 - Math.pow(2, -10 * t)), // Optional custom easing
  });

  // Listen for the scroll event and log the event data
  lenis.on("scroll", (e) => {
    // console.log(e);
  });

  // Use requestAnimationFrame to continuously update the scroll
  function raf(time: number) {
    lenis.raf(time);
    requestAnimationFrame(raf);
  }

  requestAnimationFrame(raf);
</script>
